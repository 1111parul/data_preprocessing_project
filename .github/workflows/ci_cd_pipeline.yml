# name: CI/CD Pipeline

# on:
#   push:
#     branches:
#       - main
#   pull_request:
#     branches:
#       - main

# jobs:
#   test:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v2

#       - name: Set up Python
#         uses: actions/setup-python@v2
#         with:
#           python-version: '3.8'

#       - name: Install dependencies
#         run: |
#           python -m pip install --upgrade pip
#           pip install -r requirements.txt

#       - name: Run tests
#         run: |
#           python -m pytest tests/

#   deploy:
#     needs: test
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v2

#       - name: Create deployment package
#         run: |
#           mkdir release
#           cp -r src/ requirements.txt README.md release/
#           tar -czvf release.tar.gz release/

#       - name: Upload release artifact
#         uses: actions/upload-artifact@v3
#         with:
#           name: project-release
#           path: release.tar.gz

#       - name: Create GitHub Release
#         uses: softprops/action-gh-release@v1
#         with:
#           tag_name: v1.0.${{ github.run_number }}
#           name: Release v1.0.${{ github.run_number }}
#           draft: false
#           prerelease: false
#           files: release.tar.gz
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: |
          python -m pytest tests/

  deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Create deployment package
        run: |
          mkdir release
          cp -r src/ requirements.txt README.md release/
          tar -czvf release.tar.gz release/

      - name: Upload release artifact
        uses: actions/upload-artifact@v4
        with:
          name: project-release
          path: release.tar.gz

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v1.0.${{ github.run_number }}
          name: Release v1.0.${{ github.run_number }}
          files: release.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  docker:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            your-docker-username/your-image-name:latest
            your-docker-username/your-image-name:v1.0.${{ github.run_number }}
